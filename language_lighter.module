<?php

use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Render\Element;
use Drupal\Core\Url;

/**
 * @file
 * Contains language_lighter.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function language_lighter_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
      // Main module help for the language_lighter module.
    case 'help.page.language_lighter':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('A module that helps you update the content language translation status directly through their configuration page') . '</p>';
      return $output;

    default:
  }
}


/**
 * Prepares variables for language content settings table templates.
 *
 * Default template: language-content-settings-table.html.twig.
 *
 * @param array $variables
 *   An associative array containing:
 *   - element: An associative array containing the properties of the element.
 *     Properties used: #bundle_label, #title.
 */
function language_lighter_preprocess_language_content_settings_table(&$variables) {
  /**
   * @var \Drupal\Core\Routing\CurrentRouteMatch
   */
  $current_route_match = \Drupal::service('current_route_match');
  // Add a render element representing the bundle language settings table.
  $element = $variables['element'];
  // dump(["var" => $variables]);
  $header = [
    [
      'data' => $element['#bundle_label'],
      'class' => ['bundle'],
    ],
    [
      'data' => t('Configuration'),
      'class' => ['operations'],
    ],
  ];

  $rows = [];
  $route_bundle = $current_route_match->getCurrentRouteMatch()->getParameter("bundle");

  if (isset($route_bundle) && in_array($route_bundle, Element::children($element))) {
    $rows[$route_bundle] = _language_lighter_table_row_construct($element[$route_bundle]["settings"]);
    $variables['title'] = $element['#title'];
    $variables['build'] = [
      '#header' => $header,
      '#rows' => $rows,
      '#type' => 'table',
    ];
  }
}


/**
 * implement hook_entity_operation
 *
 * @param \Drupal\Core\Entity\EntityInterface $entity
 */
function language_lighter_entity_operation(\Drupal\Core\Entity\EntityInterface $entity) {
  $entitytype = $entity->getEntityType();
  $entityId = $entitytype->get("bundle_of") ?? $entitytype->id();
  $bundleId = $entity->id();
  // dd($entityId);
  switch ($entityId) {
    case 'view':
    case 'menu':
      return [];
      break;
    default:
      return [
        'clone' => [
          'title' => t('Translatation settings'),
          'weight' => 50,
          'url' => Url::fromRoute('language_lighter.language_lighter_form', [
            'entity_type_id' => $entityId,
            'bundle' => $bundleId,
          ], [
            'query' => \Drupal::destination()->getAsArray()
          ])
        ]
      ];
      break;
  }
}


/**
 * Implements hook_form_FORM_ID_alter() for language_content_settings_form().
 */
function content_translation_form_language_lighter_form_alter(array &$form, FormStateInterface $form_state) {
  /**
   * @var \Drupal\Core\Routing\CurrentRouteMatch
   */
  $current_route_match = \Drupal::service('current_route_match');
  $route_bundle = $current_route_match->getCurrentRouteMatch()->getParameter("bundle");
  
  if (isset($route_bundle)) {
    # code...
    \Drupal::moduleHandler()->loadInclude('content_translation', 'inc', 'content_translation.admin');
    _content_translation_form_language_content_settings_form_alter($form, $form_state);
    
    
    $entityId = Element::children($form["settings"])[0];
    foreach (Element::children($form["settings"][$entityId]) as $bundle) {
      if ($bundle != $route_bundle) {
        unset($form['settings'][$entityId][$bundle]);
      }
    }
    }
}



function _language_lighter_table_row_construct($settings) {
  return  [
    'data' => [
      [
        'data' => [
          '#prefix' => '<label>',
          '#suffix' => '</label>',
          '#plain_text' => $settings['#label'],
        ],
        'class' => ['bundle'],
      ],
      [
        'data' => $settings,
        'class' => ['operations'],
      ],
    ],
    'class' => ['bundle-settings'],
  ];
}